#!/bin/bash

set -e

bold=$(tput bold)
normal=$(tput sgr0)

LXCCMD=${LXCCMD:-lxc}
ACCNT=$USERNAME
LXCIMAGE=${LXCIMAGE:-lxd-terminal-$ACCNT}
LXCEXEC="${LXCCMD} exec ${LXCIMAGE} --"

LXCIMAGELST=`${LXCCMD} list --format csv ^${LXCIMAGE}$`

if [ ! "$LXCIMAGELST" == "" ]; then
	exit 0
fi

# Allocate image
echo "${bold}Allocating LXC image ${LXCIMAGE}...${normal}"
${LXCCMD} launch ubuntu:22.04 ${LXCIMAGE}

# Setup destruction on failure
cleanup () {
	echo "${bold}ERROR: Deleting ${LXCIMAGE} after return...${normal}"
	read -t 30 -n 1
	${LXCCMD} delete -f ${LXCIMAGE}
}
trap cleanup ERR

# Configuring image
# echo "Configuring image ... "
# NOTE: Breaks on non-nvidia systems. Need to figure out how to detect them
# ${LXCCMD} config set ${LXCIMAGE} nvidia.driver.capabilities all
# ${LXCCMD} config set ${LXCIMAGE} nvidia.runtime true

# Disable Pulse shared memory
echo "${bold}Disabling Pulseaudio Shared Memory ... ${normal}"
${LXCEXEC} mkdir -p /etc/pulse/client.conf.d
echo "enable-shm=no" | ${LXCEXEC} tee /etc/pulse/client.conf.d/lxd-terminal-no-shm.conf

# Default environment variables
echo "${bold}Setting default environment ... ${normal}"
echo "export DISPLAY=:1" | ${LXCEXEC} tee /etc/profile.d/lxd-terminal-display.sh
${LXCEXEC} chmod +x /etc/profile.d/lxd-terminal-display.sh
echo "export PULSE_SERVER=unix:/tmp/pulse-native" | ${LXCEXEC} tee /etc/profile.d/lxd-terminal-pulse.sh
${LXCEXEC} chmod +x /etc/profile.d/lxd-terminal-pulse.sh

# Update image
echo "${bold}Updating image ... ${normal}"
${LXCEXEC} env DEBIAN_FRONTEND=noninteractive apt-get update -qq
${LXCEXEC} env DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -qq -yy

# Add the current user as a user in the image
echo "${bold}Setting up user ... ${normal}"
${LXCEXEC} useradd --groups sudo --shell ${SHELL} $USERNAME
${LXCEXEC} rm -rf /home/$USERNAME
${LXCEXEC} mkdir -p /home/$USERNAME
${LXCEXEC} chown $USERNAME:$USERNAME /home/$USERNAME
echo "$USERNAME ALL=(ALL) NOPASSWD:ALL\nDefaults:$USERNAME env_keep += \"DISPLAY PULSE_SERVER LXD_DIR\"\n" | ${LXCEXEC} tee /etc/sudoers.d/lxd-terminal-user

# Setup an ID map between host and guest
HOSTUID=`id -u`
HOSTGID=`id -g`
GUESTUID=`${LXCEXEC} id -u $USERNAME`
GUESTGID=`${LXCEXEC} id -g $USERNAME`

printf "uid ${HOSTUID} ${GUESTUID}\ngid ${HOSTGID} ${GUESTGID}" | ${LXCCMD} config set ${LXCIMAGE} raw.idmap -
${LXCCMD} restart ${LXCIMAGE}

# Map the home directory from the host into the container
mkdir -p ${SNAP_USER_COMMON}/home
echo "${bold}Mapping ${SNAP_USER_COMMON}/home to /home/${USERNAME} ... ${normal}"
${LXCCMD} config device add ${LXCIMAGE} home disk source=${SNAP_USER_COMMON}/home path=/home/${USERNAME}
echo "${bold}Mapping / to /host/root ... ${normal}"
${LXCEXEC} mkdir -p /host/root
${LXCCMD} config device add ${LXCIMAGE} host-root disk source=/ path=/host/root readonly=true
echo "${bold}Mapping $SNAP_REAL_HOME to /host/home ... ${normal}"
${LXCEXEC} mkdir -p /host/home
${LXCCMD} config device add ${LXCIMAGE} host-home disk source=${SNAP_REAL_HOME} path=/host/home/

ln -s /host/home ${SNAP_USER_COMMON}/home/host || true

echo "${bold}Adding devices ... ${normal}"
${LXCCMD} config device add ${LXCIMAGE} host-gpu gpu
X11DISPLAYNUM=$( echo $DISPLAY | cut -d : -f 2 )
${LXCCMD} config device add ${LXCIMAGE} x11-proxy proxy bind=container connect=unix:@/tmp/.X11-unix/X${X11DISPLAYNUM} listen=unix:@/tmp/.X11-unix/X1 security.gid=$(id -g) security.uid=$(id -u)
${LXCCMD} config device add ${LXCIMAGE} pulse-proxy proxy bind=container connect=unix:/run/user/$(id -u)/pulse/native listen=unix:/tmp/pulse-native security.gid=$(id -g) security.uid=$(id -u) mode=0777 uid=${GUESTUID} gid=${GUESTGID}

echo "${bold}Connecting to host LXD ... ${normal}"
${LXCEXEC} mkdir -p /srv/lxd
${LXCCMD} config device add ${LXCIMAGE} lxd-proxy proxy bind=container connect=unix:/var/snap/lxd/common/lxd/unix.socket listen=unix:/srv/lxd/unix.socket
echo "export LXD_DIR=/srv/lxd" | ${LXCEXEC} tee /etc/profile.d/lxd-terminal-lxd.sh
${LXCEXEC} chmod +x /etc/profile.d/lxd-terminal-lxd.sh

echo "${bold}Restarting LXD image ... ${normal}"
${LXCCMD} restart ${LXCIMAGE}

echo
echo
echo "${bold}Image Building Complete${normal}"

